
happy face

PS1="\`if [ \$? = 0 ]; then echo \[\e[33m\]^_^\[\e[0m\]; else echo \[\e[31m\]O_O\[\e[0m\]; fi\`[\u@\h:\w]\\$ "

change color on bad commnd

PROMPT_COMMAND='PS1="\[\033[0;33m\][\!]\`if [[ \$? = "0" ]]; then echo "\\[\\033[32m\\]"; else echo "\\[\\033[31m\\]"; fi\`[\u.\h: \`if [[ `pwd|wc -c|tr -d " "` > 18 ]]; then echo "\\W"; else echo "\\w"; fi\`]\$\[\033[0m\] "; echo -ne "\033]0;`hostname -s`:`pwd`\007"'

mulit line
PS1="\n\[\033[35m\]\$(/bin/date)\n\[\033[32m\]\w\n\[\033[1;31m\]\u@\h: \[\033[1;34m\]\$(/usr/bin/tty | /bin/sed -e 's:/dev/::'): \[\033[1;36m\]\$(/bin/ls -1 | /usr/bin/wc -l | /bin/sed 's: ::g') files \[\033[1;33m\]\$(/bin/ls -lah | /bin/grep -m 1 total | /bin/sed 's/total //')b\[\033[0m\] -> \[\033[0m\]"

color
PS1="\[\033[35m\]\t\[\033[m\]-\[\033[36m\]\u\[\033[m\]@\[\033[32m\]\h:\[\033[33;1m\]\w\[\033[m\]\$ "

show full path
PS1="[\[\033[32m\]\w]\[\033[0m\]\n\[\033[1;36m\]\u\[\033[1;33m\]-> \[\033[0m\]"

show job count
PS1='\[\e[1;32m\]\u@\H:\[\e[m\] \[\e[1;37m\]\w\[\e[m\]\n\[\e[1;33m\]hist:\! \[\e[0;33m\] \[\e[1;31m\]jobs:\j \$\[\e[m\] '

display dir info
PS1="\n\[\e[30;1m\]\[\016\]l\[\017\](\[\e[34;1m\]\u@\h\[\e[30;1m\])-(\[\e[34;1m\]\j\[\e[30;1m\])-(\[\e[34;1m\]\@ \d\[\e[30;1m\])->\[\e[30;1m\]\n\[\016\]m\[\017\]-(\[\[\e[32;1m\]\w\[\e[30;1m\])-(\[\e[32;1m\]\$(/bin/ls -1 | /usr/bin/wc -l | /bin/sed 's: ::g') files, \$(/bin/ls -lah | /bin/grep -m 1 total | /bin/sed 's/total //')b\[\e[30;1m\])--> \[\e[0m\]"


PS1="\n\[\e[32;1m\](\[\e[37;1m\]\u\[\e[32;1m\])-(\[\e[37;1m\]jobs:\j\[\e[32;1m\])-(\[\e[37;1m\]\w\[\e[32;1m\])\n(\[\[\e[37;1m\]! \!\[\e[32;1m\])-> \[\e[0m\]"



with git and stuff
#!/usr/bin/ruby
host = `hostname`.chomp
user = ENV['USER'] || '???'
pwd = Dir.pwd
term = ENV['TERM'] || ''
x = ''

x << "\e]0;#{pwd}\a" if term =~ /xterm|rxvt/ # set window title
x << "\e[1;36;44m #{user}@#{host} \e[1;33;44m#{pwd} "

git_status = `git status 2>/dev/null`
if $?.exitstatus < 128
  git_branch = if git_status =~ /On branch (.*)/
                 $1
               else
                 '???'
               end

  x << "\e[1;36;44mgit: \e[1;35;44m#{git_branch} "

  changes = Hash.new {|h,k| h[k] = [] }
  curtype = nil

  git_status.lines.each do |line|
    case line
    when /Changes to be committed/
      curtype = :staged
    when /Changed but not updated/
      curtype = :unstaged
    when /(new file|modified|renamed|deleted):\s+(.*)/
      changes[curtype] << $2
    end
  end

  [[:staged,32],[:unstaged,31]].each do |t,c|
    unless changes[t].empty?
      s = changes[t].join ' '
      s = "(#{changes[t].size} files)" if s.size > 30
      x << "\e[1;#{c};44m#{s} "
    end
  end
end

x << "\e[00m"
puts x




volnitsky,com/project/git-prompt


look into bashstyle


