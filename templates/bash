#!/usr/bin/env bash

# bash options
# -e	errexit	Abort script at first error, when a command exits with non-zero status
# -u	nounset	Attempt to use undefined variable outputs error message, and forces an exit
# -v	verbose	Print each command to stdout before executing it
# -x	xtrace	Similar to -v, but expands commands
set -o errexit
set -o pipefail
set -o nounset
# set -o xtrace


# Set magic variables for current file & dir
__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
__root="$(cd "$(dirname "${__dir}")" && pwd)" # <-- change this
__file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
__base="$(basename ${__file} .sh)"

# handy functions
yell() { echo "$0: $*" >&2; }
die() { yell "$*"; exit 111; }
try() { "$@" || die "cannot $*"; }

# process args
arg1="${1:-}"

# code goes here
echo "this is script @name@ run as ${0}"
